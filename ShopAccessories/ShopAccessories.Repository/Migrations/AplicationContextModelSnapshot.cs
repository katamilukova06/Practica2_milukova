// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopAccessories;

#nullable disable

namespace ShopAccessories.Migrations
{
    [DbContext(typeof(AplicationContext))]
    partial class AplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopAccessories.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("OrderProductId")
                        .HasColumnType("integer");

                    b.HasKey("ClientId");

                    b.HasIndex("OrderProductId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ShopAccessories.Models.Order", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int>("ClientId")
                        .HasMaxLength(150)
                        .HasColumnType("integer");

                    b.Property<int>("DatePurchase")
                        .HasColumnType("integer");

                    b.Property<int>("OrderCompositionProductId")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderCompositionProductId");

                    b.HasIndex("SellerId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopAccessories.Models.OrderComposition", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("OrderCompositionProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasMaxLength(150)
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderCompositionProductId");

                    b.ToTable("OrderCompositions");
                });

            modelBuilder.Entity("ShopAccessories.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("OrderCompositionProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderCompositionProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShopAccessories.Models.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SellerId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SellerId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("ShopAccessories.Models.Client", b =>
                {
                    b.HasOne("ShopAccessories.Models.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopAccessories.Models.Order", b =>
                {
                    b.HasOne("ShopAccessories.Models.OrderComposition", "OrderComposition")
                        .WithMany()
                        .HasForeignKey("OrderCompositionProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopAccessories.Models.Seller", null)
                        .WithOne("Order")
                        .HasForeignKey("ShopAccessories.Models.Order", "SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderComposition");
                });

            modelBuilder.Entity("ShopAccessories.Models.OrderComposition", b =>
                {
                    b.HasOne("ShopAccessories.Models.OrderComposition", null)
                        .WithMany("OrderCompositions")
                        .HasForeignKey("OrderCompositionProductId");
                });

            modelBuilder.Entity("ShopAccessories.Models.Product", b =>
                {
                    b.HasOne("ShopAccessories.Models.OrderComposition", "OrderComposition")
                        .WithMany()
                        .HasForeignKey("OrderCompositionProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderComposition");
                });

            modelBuilder.Entity("ShopAccessories.Models.Order", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShopAccessories.Models.OrderComposition", b =>
                {
                    b.Navigation("OrderCompositions");
                });

            modelBuilder.Entity("ShopAccessories.Models.Seller", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
